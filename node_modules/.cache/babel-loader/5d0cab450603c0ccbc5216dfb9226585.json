{"ast":null,"code":"var _jsxFileName = \"/Users/adamsmolenski/Flatiron/code/Mod4/practice/module-4-practice-woof-woof-nyc01-seng-ft-080320/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Filter from './containers/Filter.js';\nimport DogContainer from './containers/DogContainer.js';\nconst dogAPI = \"http://localhost:3000/pups/\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dogs: [],\n      selected: {}\n    };\n\n    this.selected = dog => {\n      this.setState({\n        selected: dog\n      });\n    };\n\n    this.componentDidMount = () => {\n      fetch(dogAPI).then(resp => resp.json()).then(pups => {\n        this.setState({\n          dogs: pups\n        });\n      });\n    };\n\n    this.switch = dog => {\n      let configObj = {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"accepts\": \"application/json\"\n        },\n        body: JSON.stringify({})\n      };\n      fetch();\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, console.log(this.state), /*#__PURE__*/React.createElement(Filter, {\n      dogs: this.state.dogs,\n      selected: this.selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(DogContainer, {\n      dog: this.state.selected,\n      switch: this.switch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/adamsmolenski/Flatiron/code/Mod4/practice/module-4-practice-woof-woof-nyc01-seng-ft-080320/src/App.js"],"names":["React","Filter","DogContainer","dogAPI","App","Component","state","dogs","selected","dog","setState","componentDidMount","fetch","then","resp","json","pups","switch","configObj","method","headers","body","JSON","stringify","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,MAAMC,MAAM,GAAG,6BAAf;;AACA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADwB;;AAAA,SAKhCA,QALgC,GAKpBC,GAAD,IAAS;AAClB,WAAKC,QAAL,CAAc;AAACF,QAAAA,QAAQ,EAAEC;AAAX,OAAd;AACD,KAP+B;;AAAA,SAQhCE,iBARgC,GAQZ,MAAM;AACxBC,MAAAA,KAAK,CAACT,MAAD,CAAL,CACCU,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,IAAI,IAAG;AACX,aAAKN,QAAL,CAAc;AAACH,UAAAA,IAAI,EAAES;AAAP,SAAd;AACD,OAJD;AAKD,KAd+B;;AAAA,SAehCC,MAfgC,GAetBR,GAAD,IAAS;AAChB,UAAIS,SAAS,GAAG;AAACC,QAAAA,MAAM,EAAE,OAAT;AAChBC,QAAAA,OAAO,EAAE;AAAC,0BAAiB,kBAAlB;AACX,qBAAW;AADA,SADO;AAGpBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAf;AAHc,OAAhB;AAIAX,MAAAA,KAAK;AACN,KArB+B;AAAA;;AAsBhCY,EAAAA,MAAM,GAAE;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAjB,CADH,eAEE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKA,KAAL,CAAWC,IAAzB;AAA+B,MAAA,QAAQ,EAAE,KAAKC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWE,QAA9B;AAAwC,MAAA,MAAM,EAAE,KAAKS,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AA9BiC;;AAgClC,eAAeb,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Filter from './containers/Filter.js'\nimport DogContainer from './containers/DogContainer.js'\nconst dogAPI = \"http://localhost:3000/pups/\"\nclass App extends React.Component {\n  state = {\n    dogs: [],\n    selected: {}\n  }\n  selected = (dog) => {\n    this.setState({selected: dog})\n  }\n  componentDidMount = () => {\n    fetch(dogAPI)\n    .then(resp => resp.json())\n    .then(pups =>{\n      this.setState({dogs: pups})\n    })\n  }\n  switch = (dog) => {\n    let configObj = {method: \"PATCH\",\n    headers: {\"content-type\" : \"application/json\",\n  \"accepts\": \"application/json\"},\nbody: JSON.stringify({})}\n    fetch()\n  }\n  render(){\n  return (\n    <div className=\"App\">\n      {console.log(this.state)}\n      <Filter dogs={this.state.dogs} selected={this.selected} />\n      <DogContainer dog={this.state.selected} switch={this.switch} />\n    </div>\n  );\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}